# Ultralytics YOLO üöÄ, AGPL-3.0 license
# RT-DETR-l object detection model with P3-P5 outputs. For details see https://docs.ultralytics.com/models/rtdetr

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

# From BiliBili È≠îÈ¨ºÈù¢ÂÖ∑
backbone:
  # [from, repeats, module, args]
  - [-1, 1, ConvNormLayer, [32, 3, 2, None, False, 'relu']] # 0-P1/2
  - [-1, 1, ConvNormLayer, [32, 3, 1, None, False, 'relu']] # 1
  - [-1, 1, ConvNormLayer, [64, 3, 1, None, False, 'relu']] # 2
  - [-1, 1, nn.MaxPool2d, [3, 2, 1]] # 3-P2/4
  
  - [-1, 1, FCM_3, []]
  - [-1, 1, Conv, [256, 3, 2]] # 5-P3/8
  - [-1, 1, FCM_2, []]
  - [-1, 1, Conv, [512, 3, 2]] # 7-P4/16
  - [-1, 1, FCM_1, []]
  - [-1, 1, Pzconv, []] # 9-P4/16
  - [-1, 1, FCM, []]

head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 11
  - [6, 1, Conv, [128, 1, 1, None, 1, 1, False]]  # 12 input_proj.1
  - [[-2, -1], 1, Concat, [1]] # 13
  - [-1, 3, RepC3, [128, 0.5]]  # 14, fpn_blocks.0
  - [-1, 1, Conv, [128, 1, 1]]   # 15, Y4, lateral_convs.1

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 16
  - [3, 1, Conv, [128, 1, 1, None, 1, 1, False]]  # 17 input_proj.0
  - [[-2, -1], 1, Concat, [1]]  # 18 cat backbone P2
  - [-1, 3, RepC3, [128, 0.5]]    # X3 (19), fpn_blocks.1

  - [-1, 1, Conv, [128, 3, 2]]   # 20, downsample_convs.0
  - [[-1, 15], 1, Concat, [1]]  # 21 cat Y3
  - [-1, 3, RepC3, [128, 0.5]]    # F4 (22), pan_blocks.0

  - [-1, 1, Conv, [128, 3, 2]]   # 23, downsample_convs.1
  - [[-1, 10], 1, Concat, [1]]  # 24 cat Y4
  - [-1, 3, RepC3, [128, 0.5]]    # F5 (25), pan_blocks.1

  - [[22, 25], 1, RTDETRDecoder, [nc, 128, 300, 4, 8, 3]]  # Detect(P3, P4, P5)
